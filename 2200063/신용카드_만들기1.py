# 신용카드 번호는 룬 공식(LUHN Formula)을 만족해야함
# 룬 공식이란 카드 번호에서 마지막 자리(열여섯번째) 숫자N을 구하는 공식.

# 1) 매 홀수자리의 숫자마다 2를 곱해서 더한다.
# 2) 매 짝수자리의 숫자는 그대로 더한다.
# 1)과 2)를 더 한 숫자에 N을 더한 숫자가 10으로 나눴을 때 나눠 떨어지면 유효한 숫자다

# 16자리의 카드 번호 중 처음 15개가 주어졌을 때 룬 공식을 만족하기 위해 마지막에 들어가야 하는 숫자N을 구하는 프로그램 작성

# EX) 4520 0200 1900 416N
# 1) 홀수 자리 수 (4 x 2) + (2 x 2) + (0 x 2) + (0 x 2) + (1 x 2) + (0 x 2) + (4 x 2) + (6 x 2)
# 2) 짝수 자리 수 5 + 0 + 2 + 0 + 9 + 0 + 1 
# 3) N을 제외한 1) 과 2)를 더한 합은 51이므로 N의 값은 9입니다.

# 입력 : 첫줄 테스트 케이스 T, 각 줄에는 자연수 15개
# 출력 : 각 테스트 케이스마다 16번째에 들어갈 숫자 출력

T = int(input())

for t in range(T):
    odd = 0
    even = 0
    nums = list(map(int, input().split()))
    odd = sum(nums[::2]) * 2
    even = sum(nums[1::2])

    N = 0
    while True:
        if (odd + even + N) % 10 == 0:
            print(f'#{t+1} {N}')
            break
        else:
            N += 1